"""
Name: Ardi Artani
Email: ARDI.ARTANI96@myhunter.cuny.edu
Resources: n/a
"""
#Import datasets, classifiers and performance metrics:
from sklearn import datasets, svm, metrics
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
#Using the digits data set from sklearn:
from sklearn import datasets

# mx: a matrix that has been generated by sklearn.metrics.confusion_matrix,
# The function returns the label of the class that is most commonly misidentified. That is, the row which has the number of entries not on the diagonal of all rows. If there are multiple classes that share the greatest fraction of mislabels, return the first one, as ordered in the maxtrix.
def clf_misses(mx):
    i = 0
    result_ = row_index_ = 0
    for m in mx:
        diff_ = m.sum() - m[i]
        if(diff_ > result_):
            result_ = diff_
            row_index_ = i
        i+=1

    return row_index_

# digits = datasets.load_digits()
# n_samples = len(digits.images)
# data = digits.images.reshape((n_samples, -1))
# X_train, X_test, y_train, y_test = train_test_split(data, digits.target,random_state=42, test_size=.75)
# clf = LogisticRegression(max_iter=1000)
# clf.fit(X_train,y_train)
# y_predict = clf.predict(X_test)
# confuse_mx = metrics.confusion_matrix(y_test,y_predict)
# # print(confuse_mx)
# print(f'The most misclassified class is {clf_misses(confuse_mx)}.')

# The most misclassified class is 3.
